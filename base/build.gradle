plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}
apply from: "$rootDir/dependencies.gradle"
android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
//        configurations.all {
//            resolutionStrategy { force 'androidx.core:core-ktx:1.7.0' }
//        }
        applicationId "com.example.base"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    api 'androidx.core:core-ktx:1.6.0'
    api "com.google.android.material:material:$versions.materialVersion"
    api "androidx.constraintlayout:constraintlayout:$versions.constraintVersion"

    // architecture components
    api "androidx.fragment:fragment-ktx:$versions.fragmentVersion"
    api "androidx.lifecycle:lifecycle-extensions:$versions.lifecycleVersion"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycleVersion"
    api "androidx.room:room-runtime:$versions.roomVersion"
    api "androidx.room:room-ktx:$versions.roomVersion"
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$versions.roomVersion"
    testImplementation "androidx.arch.core:core-testing:$versions.archCompomentVersion"
    
    api "com.google.dagger:hilt-android:$versions.hiltCoreVersion"
    kapt "com.google.dagger:hilt-android-compiler:$versions.hiltCoreVersion"
    
    api "androidx.hilt:hilt-lifecycle-viewmodel:$versions.hiltExtVersion"
    kapt "androidx.hilt:hilt-compiler:$versions.hiltExtVersion"

    // network
    api "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
    api "com.squareup.retrofit2:converter-moshi:$versions.retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
    api "com.squareup.okhttp3:logging-interceptor:$versions.okhttpVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttpVersion"


    // moshi
    api "com.squareup.moshi:moshi-kotlin:$versions.moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshiVersion"

    // coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutinesVersion"

    // glide
    api "com.github.bumptech.glide:glide:$versions.glideVersion"
    api "com.github.florent37:glidepalette:$versions.glidePaletteVersion"
    kapt "com.github.bumptech.glide:compiler:$versions.glideVersion"

    // transformation
    api "com.github.skydoves:transformationlayout:$versions.transformationLayout"

    // recyclerView
    api "androidx.recyclerview:recyclerview:$versions.recyclerView"
    api "com.github.skydoves:baserecyclerviewadapter:$versions.baseAdapter"

    // debugging
    api "com.jakewharton.timber:timber:$versions.timberVersion"

    //testing
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}